version: '3.4'

#
#MESSAGEBROCKER RABBITMQ
#

services:
  rabbitmq:
    image: masstransit/rabbitmq
    container_name: rabbitmq
    restart: always
    hostname: local-rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    deploy:
        resources:
            limits:
              cpus: 0.50
              memory: 512M
            reservations:
              cpus: 0.25
              memory: 128M

#
#DATABSE
#

  db:
    restart: always
    image: "mcr.microsoft.com/mssql/server:2017-latest"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=1Secure*Password1
    ports:
      - 1433:1433
    deploy:
        resources:
            limits:
              cpus: 0.50
              memory: 512M
            reservations:
              cpus: 0.25
              memory: 128M


#
#BOT SWERVER APP
#

  botserver:
    image: ${DOCKER_REGISTRY-}botserver
    restart: always
    build:
      context: .
      dockerfile: BotServer/Dockerfile
    depends_on:
      - db
      - rabbitmq
    ports:
        - 44341:443
    deploy:
        resources:
            limits:
              cpus: 0.50
              memory: 512M
            reservations:
              cpus: 0.25
              memory: 128M


#
#VK SERVER APP
#

  serverapp:
    image: ${DOCKER_REGISTRY-}vkserviceapplication
    restart: always
    build:
      context: .
      dockerfile: VkServiceApplication/Dockerfile
    depends_on:
      - rabbitmq
    deploy:
        resources:
            limits:
              cpus: 0.50
              memory: 512M
            reservations:
              cpus: 0.25
              memory: 128M

#
#ANGULAR CLIENT
#
  client:
    image: client-app
    #restart: always
    #volumes:
    #    - '../AngularClient:/AngularClient'
    #build:
    #  context: .
    #  dockerfile: ../../ChatBotClientAngular/AngularClient/Dockerfile
    ports:
        - 70:70
        - 4200:4200
    deploy:
        resources:
            limits:
              cpus: 0.50
              memory: 512M
            reservations:
              cpus: 0.25
              memory: 128M